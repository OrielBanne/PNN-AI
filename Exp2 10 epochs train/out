~~~~~~~~~~~~~IMPORT PARAMETERS~~~~~~~~~~~~~
importing modalities
 all modalilties are :  ('732nm', 'lwir', '692nm', 'polar_a', '970nm', '577nm', 'noFilter', 'color', 'polar')
going to main 
------------------------------------------------------------------------------------
 inside main    
------------------------------------------------------------------------------------
Opening the results file to start writing the parameters to it
here is the parameters file as i have read it :
-------------------------------------------------------------------------------------
########################################################################################################
#                                                                                                      #
#                                  PARAMETERS AND HYPER PARAMETERS                                     #
#                                                                                                      #
########################################################################################################

from datetime import datetime, timedelta

print('~~~~~~~~~~~~~IMPORT PARAMETERS~~~~~~~~~~~~~')


# Default Parameters
use_checkpoints=False #  checkpoints disable for training
load_checkpoint=False #  load previous training checkpoint 
experiment = 'Exp2'   #  Experiment name 
experiment_path = f'/home/orielban/experiments/{experiment}/'
load_features = True
num_days = None      ### should be None
split_cycle = 7
start_date = None
PCA = 0                ######################################################################
lwir_max_len = 64
lwir_skip = 6
vir_max_len = 64
color_max_len = 64
num_days = None
num_clusters = 0      ### is this needed here or only for clustering??
load_checkpoint = False
use_checkpoints = True

# define start and end dates of the experiment here, this should be a dictionary according to the experiment

# Exp0
# start_date = datetime(2019, 6, 4)
# end_date   = datetime(2019, 7, 7)

# Exp1
# start_date = datetime(2019, 7, 28)
# end_date   = datetime(2019, 8, 4)

# Exp2
start_date = datetime(2019, 9, 20)
end_date   = datetime(2019, 10, 13)

# training hyper-parameters       #     added again , '577nm'
excluded_modalities=['noFilter', 'polar', 'polar_a'] # All of the modalities that you don't want to use
train_ratio = 5/6     #  dataset train/test ratio
batch_size=4          #  training batch size
loss_delta=0.0        #  The minimum above the best loss that is allowed for the model to be  saved
return_epochs=0       #  Epochs without improvement allowed (loss_delta included). Return to the best checkpoint otherwise. 0 to disable
epochs = 10           #  number of epochs during train
label_lr=1e-2         #  phenotype classifier learning rate
plant_lr=1e-2         #  plant classifier LR used for transfer learning
extractor_lr=1e-2     #  feature extractor LR
domain_adapt_lr=1e-2  #  domain adaptation learning rate

#  Clustering Parameters
compare_clusters = True # Compare cluster evaluation results for used modalities
num_clusters     = 6    # The number of clusters used in the evaluations, default is Exp number of phenotypes
load_features    = False# action='store_true', default=False 
cluster_tsne_results = '/home/orielban/PNN-AI/PNN-AI/tsne_results/' 
# load features -- when true Loads the features from a file, else - computed from the extractor and saved in a csv file.

# Clustering - TSNE
plot_TSNE = True # Save a TSNE plot for used modalities
PCA = 0  # default = 0, no PCA usage . If PCA > 0 -- features will be transformed by PCA with that number of components.

-------------------------------------------------------------------------------------
end of parameters closing file 
writing the parameters to results file

 ****  dataset preparations *****
__________________________________________________________________________________
creating self.modalities
self.num_plants is    : 54
 **** Finished dataset preparations *****
------------------------------------------------------------------------------------
len train_loader =  79
------------------------------------------------------------------------------------
used_modalities.keys()  =  dict_keys(['lwir', 'color', '577nm', '692nm', '732nm', '970nm'])
 @@@@ define self.inception                              @@@@@   2020-05-09 12:53:11.039383
 @@@@   end inception for loop                           @@@@@   2020-05-09 12:53:15.141496
 **** Running        train loop                          *****   2020-05-09 12:53:23.936829
epoch 1: 2020-05-09 12:53:23.936867
	batch 24. label loss:    7.223 plant loss:   15.264 accuracy:    0.135
	batch 48. label loss:   14.441 plant loss:   30.585 accuracy:    0.323
	batch 72. label loss:   21.669 plant loss:   45.898 accuracy:    0.510
	epoch 1: 79. label loss:    1.806 plant loss:    3.826 accuracy:    0.043
Epoch Time [hh:mm:sec] = 0:21:09.196880
Model Test: 	 Test label accuracy    0.111   Test label loss     1.810
		saving model with new best loss 1.8095794859386625
epoch 2: 2020-05-09 13:18:51.716189
	batch 24. label loss:    7.183 plant loss:   15.229 accuracy:    0.188
	batch 48. label loss:   14.295 plant loss:   30.517 accuracy:    0.406
	batch 72. label loss:   21.336 plant loss:   45.793 accuracy:    0.646
	epoch 2: 79. label loss:    1.778 plant loss:    3.815 accuracy:    0.052
Epoch Time [hh:mm:sec] = 0:20:54.322827
Model Test: 	 Test label accuracy    0.238   Test label loss     1.765
		saving model with new best loss 1.7645627581883991
epoch 3: 2020-05-09 13:44:08.827712
	batch 24. label loss:    6.958 plant loss:   15.099 accuracy:    0.219
	batch 48. label loss:   13.975 plant loss:   30.175 accuracy:    0.417
	batch 72. label loss:   20.947 plant loss:   45.336 accuracy:    0.635
	epoch 3: 79. label loss:    1.746 plant loss:    3.780 accuracy:    0.053
Epoch Time [hh:mm:sec] = 0:21:07.113725
Model Test: 	 Test label accuracy    0.206   Test label loss     1.756
		saving model with new best loss 1.7560564525543698
epoch 4: 2020-05-09 14:09:39.346606
	batch 24. label loss:    6.828 plant loss:   14.978 accuracy:    0.302
	batch 48. label loss:   13.683 plant loss:   30.022 accuracy:    0.604
	batch 72. label loss:   20.447 plant loss:   44.841 accuracy:    0.854
	epoch 4: 79. label loss:    1.682 plant loss:    3.707 accuracy:    0.075
Epoch Time [hh:mm:sec] = 0:20:52.995970
Model Test: 	 Test label accuracy    0.159   Test label loss     1.903
epoch 5: 2020-05-09 14:34:47.177487
	batch 24. label loss:    6.547 plant loss:   14.457 accuracy:    0.260
	batch 48. label loss:   13.723 plant loss:   29.497 accuracy:    0.438
	batch 72. label loss:   20.294 plant loss:   44.147 accuracy:    0.708
	epoch 5: 79. label loss:    1.690 plant loss:    3.668 accuracy:    0.058
Epoch Time [hh:mm:sec] = 0:21:38.384751
Model Test: 	 Test label accuracy    0.317   Test label loss     1.749
		saving model with new best loss 1.7487888260493203
epoch 6: 2020-05-09 15:00:43.640320
	batch 24. label loss:    6.416 plant loss:   14.282 accuracy:    0.271
	batch 48. label loss:   13.010 plant loss:   28.584 accuracy:    0.615
	batch 72. label loss:   19.553 plant loss:   43.241 accuracy:    0.896
	epoch 6: 79. label loss:    1.603 plant loss:    3.567 accuracy:    0.076
Epoch Time [hh:mm:sec] = 0:20:46.137191
Model Test: 	 Test label accuracy    0.127   Test label loss     2.602
epoch 7: 2020-05-09 15:25:46.450373
	batch 24. label loss:    6.224 plant loss:   14.018 accuracy:    0.312
	batch 48. label loss:   12.429 plant loss:   28.338 accuracy:    0.583
	batch 72. label loss:   19.043 plant loss:   42.791 accuracy:    0.875
	epoch 7: 79. label loss:    1.589 plant loss:    3.557 accuracy:    0.070
Epoch Time [hh:mm:sec] = 0:20:51.462137
Model Test: 	 Test label accuracy    0.302   Test label loss     1.714
		saving model with new best loss 1.7137246510339161
epoch 8: 2020-05-09 15:50:54.798813
	batch 24. label loss:    5.991 plant loss:   13.728 accuracy:    0.344
	batch 48. label loss:   12.255 plant loss:   27.839 accuracy:    0.646
	batch 72. label loss:   18.289 plant loss:   41.698 accuracy:    0.917
	epoch 8: 79. label loss:    1.526 plant loss:    3.492 accuracy:    0.076
Epoch Time [hh:mm:sec] = 0:20:26.698788
Model Test: 	 Test label accuracy    0.238   Test label loss     1.698
		saving model with new best loss 1.6977407970125713
epoch 9: 2020-05-09 16:15:37.570316
	batch 24. label loss:    6.054 plant loss:   13.814 accuracy:    0.292
	batch 48. label loss:   11.998 plant loss:   27.527 accuracy:    0.635
	batch 72. label loss:   17.671 plant loss:   41.261 accuracy:    1.062
	epoch 9: 79. label loss:    1.470 plant loss:    3.431 accuracy:    0.088
Epoch Time [hh:mm:sec] = 0:20:55.353653
Model Test: 	 Test label accuracy    0.127   Test label loss     1.911
epoch 10: 2020-05-09 16:40:49.549159
	batch 24. label loss:    5.667 plant loss:   13.596 accuracy:    0.438
	batch 48. label loss:   11.750 plant loss:   27.312 accuracy:    0.677
	batch 72. label loss:   18.060 plant loss:   41.517 accuracy:    1.000
	epoch 10: 79. label loss:    1.486 plant loss:    3.447 accuracy:    0.087
Epoch Time [hh:mm:sec] = 0:20:45.369744
Model Test: 	 Test label accuracy    0.270   Test label loss     1.898
Train_label_losses   : [1.8063594454810732, 1.7784769618321978, 1.7461289769127255, 1.6818224589029949, 1.690298272692968, 1.603148589058528, 1.5887196177528018, 1.5256937874688044, 1.4695027797941178, 1.4856184422023713]
Train_plant_losses   : [3.8261229681590248, 3.8154398993840295, 3.780041640145438, 3.7072151698763407, 3.6681571476043215, 3.567418749370272, 3.556787711854965, 3.492249658372667, 3.4309226929195344, 3.4465864877852184]
Train_accuracy_prog  : [tensor(0.0431, device='cuda:0'), tensor(0.0519, device='cuda:0'), tensor(0.0526, device='cuda:0'), tensor(0.0746, device='cuda:0'), tensor(0.0582, device='cuda:0'), tensor(0.0765, device='cuda:0'), tensor(0.0698, device='cuda:0'), tensor(0.0765, device='cuda:0'), tensor(0.0881, device='cuda:0'), tensor(0.0873, device='cuda:0')]
Test acc  =  0.2698412698412698
Test Loss =  1.8983065665714325
Restoring model to one with loss - 1.6977407970125713

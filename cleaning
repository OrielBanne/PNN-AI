~~~~~~~~~~~~~IMPORT PARAMETERS~~~~~~~~~~~~~
importing modalities
 all modalilties are :  ('noFilter', 'polar_a', '732nm', '970nm', '692nm', 'polar', '577nm', 'lwir', 'color')
going to main 
------------------------------------------------------------------------------------
 inside dataset cleaning  App  
------------------------------------------------------------------------------------
here is the parameters file as i have read it :
-------------------------------------------------------------------------------------
########################################################################################################
#                                                                                                      #
#                                  PARAMETERS AND HYPER PARAMETERS                                     #
#                                                                                                      #
########################################################################################################

from datetime import datetime, timedelta

print('~~~~~~~~~~~~~IMPORT PARAMETERS~~~~~~~~~~~~~')


# Default Parameters
use_checkpoints=False #  checkpoints disable for training
load_checkpoint=False #  load previous training checkpoint 
experiment = 'Exp2'   #  Experiment name 
experiment_path = f'/home/orielban/experiments/{experiment}/'
load_features = True
num_days = None      ### should be None
split_cycle = 7
start_date = None
PCA = 0                ######################################################################
lwir_max_len = 64
lwir_skip = 6
vir_max_len = 16     # need to understand how many of these are the max that exist
color_max_len = 16   #        "
num_days = None
num_clusters = 0      ### is this needed here or only for clustering??
load_checkpoint = False
use_checkpoints = True

# define start and end dates of the experiment here, this should be a dictionary according to the experiment

# Exp0
# start_date = datetime(2019, 6, 4)
# end_date   = datetime(2019, 7, 7)

# Exp1
# start_date = datetime(2019, 7, 28)
# end_date   = datetime(2019, 8, 4)

# Exp2
start_date = datetime(2019, 9, 20)
end_date   = datetime(2019, 10, 13)

# Exp3


# Exp3_5

# Exp3_6


# Exp4


# Choose Device
cdevice = "cuda:0"

# training hyper-parameters       #     added again , '577nm'
excluded_modalities=['noFilter', 'polar', 'polar_a'] # All of the modalities that you don't want to use
train_ratio = 5/6     #  dataset train/test ratio
batch_size=4          #  training batch size
loss_delta=0.0        #  The minimum above the best loss that is allowed for the model to be  saved
return_epochs=0       #  Epochs without improvement allowed (loss_delta included). Return to the best checkpoint otherwise. 0 to disable
epochs = 50           #  number of epochs during train
label_lr=1e-2         #  phenotype classifier learning rate
plant_lr=1e-2         #  plant classifier LR used for transfer learning
extractor_lr=1e-2     #  feature extractor LR
domain_adapt_lr=1e-2  #  domain adaptation learning rate

#  Clustering Parameters
compare_clusters = True # Compare cluster evaluation results for used modalities
num_clusters     = 6    # The number of clusters used in the evaluations, default is Exp number of phenotypes
load_features    = False# action='store_true', default=False 
cluster_tsne_results = '/home/orielban/PNN-AI/PNN-AI/tsne_results/' 
# load features -- when true Loads the features from a file, else - computed from the extractor and saved in a csv file.

# Clustering - TSNE
plot_TSNE = True # Save a TSNE plot for used modalities
PCA = 0  # default = 0, no PCA usage . If PCA > 0 -- features will be transformed by PCA with that number of components.

-------------------------------------------------------------------------------------
end of parameters closing file 
-------------------------------------------------------------------------------------------------
Modalities     =  {'lwir': {'max_len': 64, 'skip': 6, 'transform': Compose(
    Normalize(mean=[21150.4258], std=[169.555])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187e780>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187e7b8>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187e7f0>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada187e860>
)}, 'color': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187e978>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187e9b0>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187e9e8>
    ToTensor()
)}, '577nm': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.0341], std=[0.0541])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187eb00>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187eb38>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187eb70>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada187ebe0>
)}, '692nm': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.2081], std=[0.2807])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187ecf8>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187ed30>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187ed68>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada187edd8>
)}, '732nm': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.2263], std=[0.6049])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187eef0>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187ef28>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187ef60>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada187efd0>
)}, '970nm': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.0035], std=[0.0038])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada188b128>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada188b160>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada188b198>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada188b208>
)}, 'noFilter': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.05136], std=[0.22331])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada188b320>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada188b358>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada188b390>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada188b400>
)}}
-------------------------------------------------------------------------------------------------
Used Modalities =  {'lwir': {'max_len': 64, 'skip': 6, 'transform': Compose(
    Normalize(mean=[21150.4258], std=[169.555])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187e780>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187e7b8>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187e7f0>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada187e860>
)}, 'color': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187e978>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187e9b0>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187e9e8>
    ToTensor()
)}, '577nm': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.0341], std=[0.0541])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187eb00>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187eb38>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187eb70>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada187ebe0>
)}, '692nm': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.2081], std=[0.2807])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187ecf8>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187ed30>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187ed68>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada187edd8>
)}, '732nm': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.2263], std=[0.6049])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada187eef0>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada187ef28>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada187ef60>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada187efd0>
)}, '970nm': {'max_len': 16, 'transform': Compose(
    Normalize(mean=[0.0035], std=[0.0038])
    ToPILImage()
    <datasets.transformations.RandomCrop object at 0x7fada188b128>
    <datasets.transformations.RandomHorizontalFlip object at 0x7fada188b160>
    <datasets.transformations.RandomVerticalFlip object at 0x7fada188b198>
    ToTensor()
    <datasets.transformations.GreyscaleToRGB object at 0x7fada188b208>
)}}
-------------------------------------------------------------------------------------------------

 ****  dataset preparations *****
__________________________________________________________________________________
creating self.modalities
inside ModalityDataset root_dir =  /home/orielban/experiments/Exp2/
directory_suffix   =   LWIR
inside ModalityDataset root_dir =  /home/orielban/experiments/Exp2/
directory_suffix   =   D465_Color
inside ModalityDataset root_dir =  /home/orielban/experiments/Exp2/
directory_suffix   =   VIR_day
inside ModalityDataset root_dir =  /home/orielban/experiments/Exp2/
directory_suffix   =   VIR_day
inside ModalityDataset root_dir =  /home/orielban/experiments/Exp2/
directory_suffix   =   VIR_day
inside ModalityDataset root_dir =  /home/orielban/experiments/Exp2/
directory_suffix   =   VIR_day
self.num_plants is    : 54
 **** Finished dataset preparations *****
------------------------------------------------------------------------------------
len train_loader =  79
------------------------------------------------------------------------------------
used_modalities.keys()  =  dict_keys(['lwir', 'color', '577nm', '692nm', '732nm', '970nm'])
feature extractor parameters to dict    
Mod is :   lwir 	 TCN num_levels  =  3 	 TCN kernel_size  =  5
Mod is :   color 	 TCN num_levels  =  2 	 TCN kernel_size  =  5
Mod is :   577nm 	 TCN num_levels  =  2 	 TCN kernel_size  =  5
Mod is :   692nm 	 TCN num_levels  =  2 	 TCN kernel_size  =  5
Mod is :   732nm 	 TCN num_levels  =  2 	 TCN kernel_size  =  5
Mod is :   970nm 	 TCN num_levels  =  2 	 TCN kernel_size  =  5
